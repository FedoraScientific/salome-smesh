/*!

\page tui_filters_page Filters usage

Filters allow picking only the mesh elements satisfying to a
specific condition or a set of conditions. Filters can be used to create
or edit mesh groups, remove elements from the mesh object, control
mesh quality by different parameters, etc.

Several filters can be combined together by using logical operators \a
AND and \a OR. In addition, applied filter criterion can be reverted
using logical operator \a NOT.

Mesh filters use the functionality of mesh quality controls to filter
mesh nodes / elements by a specific characteristic (Area, Length, etc).

This page provides a short description of the existing mesh filters,
describes required parameters and gives simple examples of usage in
Python scripts.

\sa \ref tui_quality_controls_page

\section filter_aspect_ratio Aspect ratio

Filter 2D mesh elements (faces) according to the aspect ratio value:
- element type should be \a smesh.FACE
- functor type should be \a smesh.FT_AspectRatio
- threshold is floating point value (aspect ratio)

\include filters_ex01.py
<a href="../../examples/SMESH/filters_ex01.py">Download this script</a>

\sa \ref tui_aspect_ratio

\section filter_aspect_ratio_3d Aspect ratio 3D

Filter 3D mesh elements (volumes) according to the aspect ratio value:
- element type is \a smesh.VOLUME
- functor type is \a smesh.FT_AspectRatio3D
- threshold is floating point value (aspect ratio)

\include filters_ex02.py
<a href="../../examples/SMESH/filters_ex02.py">Download this script</a>

\sa \ref tui_aspect_ratio_3d

\section filter_warping_angle Warping angle

Filter 2D mesh elements (faces) according to the warping angle value:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_Warping
- threshold is floating point value (warping angle)

\include filters_ex03.py
<a href="../../examples/SMESH/filters_ex03.py">Download this script</a>

\sa \ref tui_warping

\section filter_minimum_angle Minimum angle

Filter 2D mesh elements (faces) according to the minimum angle value:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_MinimumAngle
- threshold is floating point value (minimum angle)

\include filters_ex04.py
<a href="../../examples/SMESH/filters_ex04.py">Download this script</a>

\sa \ref tui_minimum_angle

\section filter_taper Taper

Filter 2D mesh elements (faces) according to the taper value:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_Taper
- threshold is floating point value (taper)

\include filters_ex05.py
<a href="../../examples/SMESH/filters_ex05.py">Download this script</a>

\sa \ref tui_taper

\section filter_skew Skew

Filter 2D mesh elements (faces) according to the skew value:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_Skew
- threshold is floating point value (skew)

\include filters_ex06.py
<a href="../../examples/SMESH/filters_ex06.py">Download this script</a>

\sa \ref tui_skew

\section filter_area Area

Filter 2D mesh elements (faces) according to the area value:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_Area
- threshold is floating point value (area)

\include filters_ex07.py
<a href="../../examples/SMESH/filters_ex07.py">Download this script</a>

\sa \ref tui_area

\section filter_volume Volume

Filter 3D mesh elements (volumes) according to the volume value:
- element type is \a smesh.VOLUME
- functor type is \a smesh.FT_Volume3D
- threshold is floating point value (volume)

\include filters_ex08.py
<a href="../../examples/SMESH/filters_ex08.py">Download this script</a>

\sa \ref tui_volume

\section filter_free_borders Free borders

Filter 1D mesh elements (edges) which represent free borders of a mesh:
- element type is \a smesh.EDGE
- functor type is \a smesh.FT_FreeBorders
- threshold value is not required

\include filters_ex09.py
<a href="../../examples/SMESH/filters_ex09.py">Download this script</a>

\sa \ref tui_free_borders

\section filter_free_edges Free edges

Filter 2D mesh elements (faces) consisting of edges belonging to one
element of mesh only:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_FreeEdges
- threshold value is not required

\include filters_ex10.py
<a href="../../examples/SMESH/filters_ex10.py">Download this script</a>

\sa \ref tui_free_edges

\section filter_free_nodes Free nodes

Filter free nodes:
- element type is \a smesh.NODE
- functor type is \a smesh.FT_FreeNodes
- threshold value is not required

\include filters_ex11.py
<a href="../../examples/SMESH/filters_ex11.py">Download this script</a>

\sa \ref tui_free_nodes

\section filter_free_faces Free faces

Filter free faces:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_FreeFaces
- threshold value is not required

\include filters_ex12.py
<a href="../../examples/SMESH/filters_ex12.py">Download this script</a>

\sa \ref tui_free_faces

\section filter_bare_border_faces Bare border faces

Filter faces with bare borders:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_BareBorderFace
- threshold value is not required

\include filters_ex13.py
<a href="../../examples/SMESH/filters_ex13.py">Download this script</a>

\sa \ref tui_bare_border_faces

\section filter_coplanar_faces Coplanar faces

Filter faces with bare borders:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_CoplanarFaces
- threshold value is the face ID
- tolerance is in degrees

\include filters_ex14.py
<a href="../../examples/SMESH/filters_ex14.py">Download this script</a>

\section filter_over_constrained_faces Over-constrained faces

Filter over-constrained faces:
- element type is \a smesh.FACE
- functor type is \a smesh.FT_OverConstrainedFace
- threshold value is not required

\include filters_ex15.py
<a href="../../examples/SMESH/filters_ex15.py">Download this script</a>

\sa \ref tui_over_constrained_faces

\section filter_double_elements Double edges, Double faces, Double volumes

filter mesh elements basing on the same set of nodes:
- element type is either \a smesh.EGDE, \a smesh.FACE or \a smesh.VOLUME
- functor type is either \a smesh.FT_EqualEdges, \a
          smesh.FT_EqualFaces or \a smesh.FT_EqualVolumes, 
- threshold value is not required

\include filters_ex16.py
<a href="../../examples/SMESH/filters_ex16.py">Download this script</a>


\section tui_double_nodes_control Double nodes

filters mesh nodes which are coincident with other nodes (within a given tolerance):
- element type is \a smesh.NODE
- functor type is \a smesh.FT_EqualNodes
- threshold value is not required
- default tolerance is 1.0e-7

\include filters_ex17.py
<a href="../../examples/SMESH/filters_ex17.py">Download this script</a>


\section filter_borders_multiconnection Borders at multi-connection

Filter border 1D mesh elements (edges) according to the specified number of
connections (faces belonging the border edges)
- element type is \a smesh.EDGE
- functor type is \a smesh.FT_MultiConnection
- threshold is integer value (number of connections)

\include filters_ex18.py
<a href="../../examples/SMESH/filters_ex18.py">Download this script</a>

\sa \ref tui_borders_at_multiconnection

\section filter_borders_multiconnection_2d Borders at multi-connection 2D

Filter 2D mesh elements (faces) which consist of edges belonging
to the specified number of mesh elements
- element type is \a smesh.FACE
- functor type is \a smesh.FT_MultiConnection2D
- threshold is integer value (number of connections)

\include filters_ex19.py
<a href="../../examples/SMESH/filters_ex19.py">Download this script</a>

\sa \ref tui_borders_at_multiconnection_2d

\section filter_length Length

Filter 1D mesh elements (edges) according to the edge length value:
- element type should be \a smesh.EDGE
- functor type should be \a smesh.FT_Length
- threshold is floating point value (length)

\include filters_ex20.py
<a href="../../examples/SMESH/filters_ex20.py">Download this script</a>

\sa \ref tui_length_1d

\section filter_length_2d Length 2D

Filter 2D mesh elements (faces) corresponding to the maximum length.
value of its edges:
- element type should be \a smesh.FACE
- functor type should be \a smesh.FT_Length2D
- threshold is floating point value (edge length)

\include filters_ex21.py
<a href="../../examples/SMESH/filters_ex21.py">Download this script</a>

\sa \ref tui_length_2d

\section filter_max_element_length_2d Element Diameter 2D

Filter 2D mesh elements (faces) corresponding to the maximum length
value of its edges and diagonals:
- element type should be \a smesh.FACE
- functor type should be \a smesh.FT_MaxElementLength2D
- threshold is floating point value (edge/diagonal length)

\include filters_ex22.py
<a href="../../examples/SMESH/filters_ex22.py">Download this script</a>

\sa \ref tui_max_element_length_2d

\section filter_max_element_length_3d Element Diameter 3D

Filter 3D mesh elements (volumes) corresponding to the maximum length
value of its edges and diagonals:
- element type should be \a smesh.VOLUME
- functor type should be \a smesh.FT_MaxElementLength3D
- threshold is floating point value (edge/diagonal length)

\include filters_ex23.py
<a href="../../examples/SMESH/filters_ex23.py">Download this script</a>

\sa \ref tui_max_element_length_3d

\section filter_bare_border_volumes Bare border volumes

Filter 3D mesh elements with bare borders:
- element type is \a smesh.VOLUME
- functor type is \a smesh.FT_BareBorderVolume
- threshold value is not required

\include filters_ex24.py
<a href="../../examples/SMESH/filters_ex24.py">Download this script</a>

\sa \ref tui_bare_border_volumes

\section filter_over_constrained_volumes Over-constrained volumes

Filter over-constrained volumes:
- element type is \a smesh.VOLUME
- functor type is \a smesh.FT_OverConstrainedVolume
- threshold value is not required

\include filters_ex25.py
<a href="../../examples/SMESH/filters_ex25.py">Download this script</a>

\sa \ref tui_over_constrained_faces

\section filter_belong_to_geom Belong to Geom

Filter mesh entities (nodes or elements) which all nodes lie on the
shape defined by threshold value:
- element type can be any entity type, from \a smesh.NODE to \a smesh.VOLUME
- functor type should be \a smesh.FT_BelongToGeom
- threshold is geometrical object

\include filters_ex26.py
<a href="../../examples/SMESH/filters_ex26.py">Download this script</a>

\section filter_lying_on_geom Lying on Geom

Filter mesh entities (nodes or elements) at least one node of which lies on the
shape defined by threshold value:
- element type can be any entity type, from \a smesh.NODE to \a smesh.VOLUME
- functor type should be \a smesh.FT_LyingOnGeom
- threshold is geometrical object

\include filters_ex27.py
<a href="../../examples/SMESH/filters_ex27.py">Download this script</a>

\section filter_belong_to_plane Belong to Plane

Filter mesh entities (nodes or elements) which all nodes belong to the
plane defined by threshold value with the given tolerance:
- element type can be: \a smesh.NODE, \a smesh.EDGE, \a smesh.FACE
- functor type should be \a smesh.FT_BelongToPlane
- threshold is geometrical object (plane)
- default tolerance is 1.0e-7

\include filters_ex28.py
<a href="../../examples/SMESH/filters_ex28.py">Download this script</a>

\section filter_belong_to_cylinder Belong to Cylinder

Filter mesh entities (nodes or elements) which all nodes belong to the
cylindrical face defined by threshold value with the given tolerance:
- element type can be: \a smesh.NODE, \a smesh.EDGE, \a smesh.FACE
- functor type should be \a smesh.FT_BelongToCylinder
- threshold is geometrical object (cylindrical face)
- default tolerance is 1.0e-7

\include filters_ex29.py
<a href="../../examples/SMESH/filters_ex29.py">Download this script</a>

\section filter_belong_to_surface Belong to Surface

Filter mesh entities (nodes or elements) which all nodes belong to the
arbitrary surface defined by threshold value with the given tolerance:
- element type can be: \a smesh.NODE, \a smesh.EDGE, \a smesh.FACE
- functor type should be \a smesh.FT_BelongToGenSurface
- threshold is geometrical object (arbitrary surface)
- default tolerance is 1.0e-7

\include filters_ex30.py
<a href="../../examples/SMESH/filters_ex30.py">Download this script</a>

\section filter_range_of_ids Range of IDs

Filter mesh entities elements (nodes or elements) according to the
specified identifiers range:
- element type can be any entity type, from \a smesh.NODE to \a smesh.VOLUME
- functor type is \a smesh.FT_RangeOfIds
- threshold is string listing required IDs and/or ranges of IDs, e.g."1,2,3,50-60,63,67,70-78"	

\include filters_ex31.py
<a href="../../examples/SMESH/filters_ex31.py">Download this script</a>

\section filter_bad_oriented_volume Badly oriented volume

Filter 3D mesh elements (volumes), which are incorrectly oriented from
the point of view of MED convention. 
- element type should be \a smesh.VOLUME
- functor type is \a smesh.FT_BadOrientedVolume
- threshold is not required

\include filters_ex32.py
<a href="../../examples/SMESH/filters_ex32.py">Download this script</a>

\section filter_linear_or_quadratic Linear / quadratic

Filter linear / quadratic mesh elements:
- element type should be any element type, e.g.: \a smesh.EDGE, \a smesh.FACE, \a smesh.VOLUME
- functor type is \a smesh.FT_LinearOrQuadratic
- threshold is not required
- if unary operator is set to smesh.FT_LogicalNOT, the quadratic
elements are selected, otherwise (by default) linear elements are selected

\include filters_ex33.py
<a href="../../examples/SMESH/filters_ex33.py">Download this script</a>

\section filter_group_color Group color

Filter mesh entities, belonging to the group with the color defined by the threshold value.
- element type can be any entity type, from \a smesh.NODE to \a smesh.VOLUME
- functor type is \a smesh.FT_GroupColor
- threshold should be of SALOMEDS.Color type

\include filters_ex34.py
<a href="../../examples/SMESH/filters_ex34.py">Download this script</a>

\section filter_geom_type Geometry type

Filter mesh elements by the geometric type defined with the threshold
value. The list of available geometric types depends on the element
entity type.
- element type should be any element type, e.g.: \a smesh.EDGE, \a smesh.FACE, \a smesh.VOLUME
- functor type should be \a smesh.FT_ElemGeomType
- threshold is of smesh.GeometryType value

\include filters_ex35.py
<a href="../../examples/SMESH/filters_ex35.py">Download this script</a>

\section combining_filters How to combine filters with Criterion structures?

Filters can be combined by making use of "criteria".

Example :

\include filters_ex36.py
<a href="../../examples/SMESH/filters_ex36.py">Download this script</a>


*/
