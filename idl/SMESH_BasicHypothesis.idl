//  Copyright (C) 2003  OPEN CASCADE, EADS/CCR, LIP6, CEA/DEN,
//  CEDRAT, EDF R&D, LEG, PRINCIPIA R&D, BUREAU VERITAS 
// 
//  This library is free software; you can redistribute it and/or 
//  modify it under the terms of the GNU Lesser General Public 
//  License as published by the Free Software Foundation; either 
//  version 2.1 of the License. 
// 
//  This library is distributed in the hope that it will be useful, 
//  but WITHOUT ANY WARRANTY; without even the implied warranty of 
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU 
//  Lesser General Public License for more details. 
// 
//  You should have received a copy of the GNU Lesser General Public 
//  License along with this library; if not, write to the Free Software 
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA 
// 
//  See http://www.opencascade.org/SALOME/ or email : webmaster.salome@opencascade.org 
//
//
//
//  File   : SMESH_BasicHypothesis.idl
//  Author : Paul RASCLE, EDF
//  $Header$

#ifndef _SMESH_BASICHYPOTHESIS_IDL_
#define _SMESH_BASICHYPOTHESIS_IDL_

#include "SALOME_Exception.idl"
#include "SMESH_Hypothesis.idl"


module SMESH
{
  interface SMESH_LocalLength : SMESH_Hypothesis
  {
    void SetLength(in double length) 
      raises (SALOME::SALOME_Exception);
    double GetLength();
  };

  interface SMESH_NumberOfSegments : SMESH_Hypothesis
  {
    void SetNumberOfSegments(in long segmentsNumber) 
      raises (SALOME::SALOME_Exception);
    long GetNumberOfSegments();
    void SetScaleFactor(in double scaleFactor)
      raises (SALOME::SALOME_Exception);
    double GetScaleFactor();
  };

  interface SMESH_MaxElementArea : SMESH_Hypothesis
  {
    void SetMaxElementArea(in double area) 
      raises (SALOME::SALOME_Exception);
    double GetMaxElementArea();
  };

  interface SMESH_LengthFromEdges : SMESH_Hypothesis
  {
    void SetMode(in long mode) 
      raises (SALOME::SALOME_Exception);
    long GetMode();
  };

  interface SMESH_MaxElementVolume : SMESH_Hypothesis
  {
    void SetMaxElementVolume(in double volume) 
      raises (SALOME::SALOME_Exception);
    double GetMaxElementVolume();
  };

  interface SMESH_Regular_1D : SMESH_1D_Algo
  {
  };

  interface SMESH_MEFISTO_2D : SMESH_2D_Algo
  {
  };

  interface SMESH_Quadrangle_2D : SMESH_2D_Algo
  {
  };

  interface SMESH_Hexa_3D : SMESH_3D_Algo
  {
  };

#ifdef HAVE_NETGEN
  interface SMESH_NETGEN_3D : SMESH_3D_Algo
  {
  };
#endif

};

#endif
